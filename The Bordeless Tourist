destinations = ["Paris, France", "Shanghai, China", "Los Angeles, USA", "Sao Paulo, Brazil", "Cairo, Egypt"]
test_traveler = ['Erin Wilkes', 'Shanghai, China', ['historical site', 'art']]

# Returns the index of the destination that is passed into the function
def get_destination_index(destination):
    destination_index = destinations.index(destination)
    return destination_index

# print(get_destination_index("Shanghai, China"))

# Gets traveler location that is based off of the parameter traveler --> Calls the function above and assigns the index
# of Shanghai, China to traveler_destination_index and returns the index
def get_traveler_location(traveler):
    traveler_destination = traveler[1]
    traveler_destination_index = get_destination_index(traveler_destination) 
    return traveler_destination_index

# Calls method above and returns the traveler's destination index
test_destination_index = get_traveler_location(test_traveler)
# print(test_destination_index)

# Initializes an empty 2D list to store attractions for a given destination at that respective index
attractions = [
              [], 
              [], 
              [], 
              [], 
              []]
#print(attractions)

# Function takes in a sample destination from the above lists destinations and a sample attraction
def add_attraction(destination, attraction):
    destination_index = get_destination_index(destination)
    # Assigns an empty list into attractions_for_destination --> Gets the index of the destination passed in and assigns the associated attraction to the correct attractions list index 
    # attractions_for_destination is an alias to the attractions list defined above --> lists are mutable in Python
    attractions_for_destination = attractions[destination_index]
    attractions_for_destination.append(attraction)

add_attraction("Paris, France", ["Arc de Triomphe", ["historical site", "monument"]])
add_attraction("Shanghai, China", ["Yu Garden", ["garden", "historical site"]])
add_attraction("Shanghai, China", ["Yuz Museum", ["art", "museum"]])
add_attraction("Shanghai, China", ["Oriental Pearl Tower", ["skyscraper", "viewing deck"]])
add_attraction("Los Angeles, USA", ["LACMA", ["art", "museum"]])
add_attraction("Sao Paulo, Brazil", ["São Paulo Zoo", ["zoo"]])
add_attraction("Sao Paulo, Brazil", ["Pátio do Colégio", ["historical site"]])
add_attraction("Cairo, Egypt", ["Pyramids of Giza", ["monument", "historical site"]])
add_attraction("Cairo, Egypt", ["Egyptian Museum", ["museum"]])
# print(attractions)

# Functions takes in a sample destination and a list of interests that the user prefers
# ['zoo', 'historical site', 'beach']
def find_attractions(destination, interests):
    destination_index = get_destination_index(destination)
    attractions_in_city = attractions[destination_index]
    attractions_with_interest = []
    for possible_attraction in attractions_in_city:
        attraction_name = possible_attraction[0]
        attraction_tags = possible_attraction[1]
        for interest in interests:
            if interest in attraction_tags:
                attractions_with_interest.append(possible_attraction[0])
    return attractions_with_interest

la_arts = find_attractions("Los Angeles, USA", ["art"])
print(la_arts)

def get_attractions_for_traveler(traveler):
    traveler_destination = traveler[1]
    traveler_interests = traveler[2]
    traveler_attractions = find_attractions(traveler_destination, traveler_interests)
    interests_string = "Hi " + traveler[0] + ", we think you'll like these places around " + traveler[1] + ": "
    for attraction in traveler_attractions:
        interests_string += attraction
    return interests_string



smills_france = get_attractions_for_traveler(["Dereck Smill", "Shanghai, China", ["skyscraper"]])
print(smills_france)
